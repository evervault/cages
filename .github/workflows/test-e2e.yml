on:
  push:
    paths:
      - e2e-tests/**
      - data-plane/**
      - control-plane/**
      - .github/workflows/test-e2e.yml
name: Run end-to-end tests
jobs:
  run_e2e_tests_full_features:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: Swatinem/rust-cache@v2
      - name: Build Cages Project
        uses: evervault/cargo-static-build@master
        with:
          cmd: cargo build --features network_egress --release --target x86_64-unknown-linux-musl
      - name: Build mock crypto API
        uses: evervault/cargo-static-build@master
        with:
          cmd: cd e2e-tests/mock-crypto ; cargo build --release --target x86_64-unknown-linux-musl
        env:
          CARGO_REGISTRIES_EVERVAULT_RUST_LIBRARIES_INDEX: ${{ secrets.RUST_CRYPTO_REGISTRY }}
      - uses: actions-hub/docker/cli@f5fdbfc3f9d2a9265ead8962c1314108a7b7ec5d
        env:
          SKIP_LOGIN: true
      - uses: actions/setup-node@v1
        with:
          node-version: "16.x"
      - name: Run end-to-end test script
        env:
          CI: true
          # MOCK_CRYPTO_CERT: ${{ secrets.MOCK_CRYPTO_CERT }}
          # MOCK_CRYPTO_KEY: ${{ secrets.MOCK_CRYPTO_KEY }}
          # RUST_CRYPTO_REGISTRY: ${{ secrets.RUST_CRYPTO_REGISTRY }}
          # MOCK_CERT_PROVISIONER_CLIENT_CERT: ${{ secrets.MOCK_CERT_PROVISIONER_CLIENT_CERT }}
          # MOCK_CERT_PROVISIONER_CLIENT_KEY: ${{ secrets.MOCK_CERT_PROVISIONER_CLIENT_KEY }}
          # MOCK_CERT_PROVISIONER_ROOT_CERT: ${{ secrets.MOCK_CERT_PROVISIONER_ROOT_CERT }}
          # MOCK_CERT_PROVISIONER_SERVER_CERT: ${{ secrets.MOCK_CERT_PROVISIONER_SERVER_CERT }}
          # MOCK_CERT_PROVISIONER_SERVER_KEY: ${{ secrets.MOCK_CERT_PROVISIONER_SERVER_KEY }}
        run: sh e2e-tests/run-all-feature-tests.sh
  run_e2e_tests_no_tls_termination:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: Swatinem/rust-cache@v2
      - name: Build Cages Project
        uses: evervault/cargo-static-build@master
        with:
          cmd: cargo build --release --target x86_64-unknown-linux-musl --features not_enclave --no-default-features
      - name: Build mock crypto API
        uses: evervault/cargo-static-build@master
        with:
          cmd: cd e2e-tests/mock-crypto ; cargo build --release --target x86_64-unknown-linux-musl
        env:
          CARGO_REGISTRIES_EVERVAULT_RUST_LIBRARIES_INDEX: ${{ secrets.RUST_CRYPTO_REGISTRY }}
      - uses: actions-hub/docker/cli@f5fdbfc3f9d2a9265ead8962c1314108a7b7ec5d
        env:
          SKIP_LOGIN: true
      - uses: actions/setup-node@v1
        with:
          node-version: "16.x"
      - name: Run end-to-end test script
        env:
          CI: true
          # MOCK_CRYPTO_CERT: ${{ secrets.MOCK_CRYPTO_CERT }}
          # MOCK_CRYPTO_KEY: ${{ secrets.MOCK_CRYPTO_KEY }}
          # RUST_CRYPTO_REGISTRY: ${{ secrets.RUST_CRYPTO_REGISTRY }}
          # MOCK_CERT_PROVISIONER_CLIENT_CERT: ${{ secrets.MOCK_CERT_PROVISIONER_CLIENT_CERT }}
          # MOCK_CERT_PROVISIONER_CLIENT_KEY: ${{ secrets.MOCK_CERT_PROVISIONER_CLIENT_KEY }}
          # MOCK_CERT_PROVISIONER_ROOT_CERT: ${{ secrets.MOCK_CERT_PROVISIONER_ROOT_CERT }}
          # MOCK_CERT_PROVISIONER_SERVER_CERT: ${{ secrets.MOCK_CERT_PROVISIONER_SERVER_CERT }}
          # MOCK_CERT_PROVISIONER_SERVER_KEY: ${{ secrets.MOCK_CERT_PROVISIONER_SERVER_KEY }}
        run: sh e2e-tests/run-tls-disabled-tests.sh
